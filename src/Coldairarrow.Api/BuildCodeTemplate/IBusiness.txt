using Coldairarrow.Entity.%areaName%;
using Coldairarrow.Util;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq.Expressions;
using System;

namespace Coldairarrow.Business.%areaName%
{
    public interface I%entityName%Business
    {
        Task<PageResult<%entityName%>> GetDataListAsync(PageInput<ConditionDTO> input);
        Task<%entityName%> GetTheDataAsync(string id);
        Task AddDataAsync(%entityName% data);
        Task UpdateDataAsync(%entityName% data);
        Task DeleteDataAsync(List<string> ids);
        %entityName% GetEntity(Expression<Func<%entityName%, bool>> expression);
        Task<%entityName%> GetEntityAsync(Expression<Func<%entityName%, bool>> expression);
        List<%entityName%> GetList(Expression<Func<%entityName%, bool>> expression);
        Task<List<%entityName%>> GetListAsync(Expression<Func<%entityName%, bool>> expression);
        List<%entityName%> GetList<TKey>(Expression<Func<%entityName%, bool>> expression, Expression<Func<%entityName%, TKey>> orderByDescending, int pageIndex, int pageSize = 20);
        Task<List<%entityName%>> GetListAsync<TKey>(Expression<Func<%entityName%, bool>> expression, Expression<Func<%entityName%, TKey>> orderByDescending, int pageIndex, int pageSize = 20);
    }
}